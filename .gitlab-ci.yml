stages:
  - build
  - deploy

cache:
  paths:
    - dist

build:
  stage: build
  image: node:alpine
  script:
    - npm install
    - npm run build:prod

stop-dev-app:
  stage: deploy
  image: docker:latest
  environment:
    name: dev/$CI_COMMIT_REF_SLUG
    action: stop
  script:
    - docker stop $CI_ENVIRONMENT_SLUG || true
    - docker rm $CI_ENVIRONMENT_SLUG || true
  when: manual
  only:
    - branches
  except:
    - master

deploy-dev:
  stage: deploy
  image: docker:latest
  environment:
    name: dev/$CI_COMMIT_REF_SLUG
    url: https://$CI_ENVIRONMENT_SLUG.$TRAEFIK_FRONTEND
    on_stop: stop-dev-app
  script:
    - docker stop $CI_ENVIRONMENT_SLUG || true
    - docker rm $CI_ENVIRONMENT_SLUG || true
    - docker build
      --file="config/nginx/Dockerfile"
      -t $CI_ENVIRONMENT_SLUG
      .
    - docker run
      -d
      --label="traefik.enable=true"
      --label="traefik.backend=$CI_ENVIRONMENT_SLUG"
      --label="traefik.port=$TRAEFIK_PORT"
      --label="traefik.frontend.rule=Host:$CI_ENVIRONMENT_SLUG.$TRAEFIK_FRONTEND"
      --label="traefik.docker.network=webgateway"
      --network=webgateway
      --name=$CI_ENVIRONMENT_SLUG
      $CI_ENVIRONMENT_SLUG
  only:
    - branches
  except:
    - master

deploy-prod:
  stage: deploy
  image: docker:latest
  environment:
    name: prod
    url: https://$TRAEFIK_FRONTEND
  script:
    - docker stop $CI_PROJECT_PATH_SLUG || true
    - docker rm $CI_PROJECT_PATH_SLUG || true
    - docker build
      --file="config/nginx/Dockerfile"
      -t $CI_PROJECT_PATH_SLUG
      .
    - docker run
      -d
      --label="traefik.enable=true"
      --label="traefik.backend=$CI_PROJECT_PATH_SLUG"
      --label="traefik.port=$TRAEFIK_PORT"
      --label="traefik.frontend.rule=Host:$TRAEFIK_FRONTEND"
      --label="traefik.docker.network=webgateway"
      --network=webgateway
      --name=$CI_PROJECT_PATH_SLUG
      $CI_PROJECT_PATH_SLUG
  only:
    - master
